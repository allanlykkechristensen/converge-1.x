//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.17 at 08:23:15 PM CEST 
//


package dk.i2m.converge.nar.newsml.g2.core;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import org.w3c.dom.Element;


/**
 * The type for a set of properties representing the rights associated with the Item (Type defined in this XML Schema only)
 * 
 * <p>Java class for RightsInfoType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RightsInfoType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://iptc.org/std/nar/2006-10-01/}accountable" minOccurs="0"/>
 *         &lt;element ref="{http://iptc.org/std/nar/2006-10-01/}copyrightHolder" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element ref="{http://iptc.org/std/nar/2006-10-01/}copyrightNotice"/>
 *           &lt;element ref="{http://iptc.org/std/nar/2006-10-01/}usageTerms"/>
 *         &lt;/choice>
 *         &lt;any processContents='lax' namespace='##other' maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RightsInfoType", propOrder = {
    "accountable",
    "copyrightHolder",
    "copyrightNoticeOrUsageTerms",
    "any"
})
public class RightsInfoType {

    protected FlexPropType accountable;
    protected FlexPropType copyrightHolder;
    @XmlElementRefs({
        @XmlElementRef(name = "copyrightNotice", namespace = "http://iptc.org/std/nar/2006-10-01/", type = JAXBElement.class),
        @XmlElementRef(name = "usageTerms", namespace = "http://iptc.org/std/nar/2006-10-01/", type = JAXBElement.class)
    })
    protected List<JAXBElement<BlockType>> copyrightNoticeOrUsageTerms;
    @XmlAnyElement(lax = true)
    protected List<Object> any;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the accountable property.
     * 
     * @return
     *     possible object is
     *     {@link FlexPropType }
     *     
     */
    public FlexPropType getAccountable() {
        return accountable;
    }

    /**
     * Sets the value of the accountable property.
     * 
     * @param value
     *     allowed object is
     *     {@link FlexPropType }
     *     
     */
    public void setAccountable(FlexPropType value) {
        this.accountable = value;
    }

    /**
     * Gets the value of the copyrightHolder property.
     * 
     * @return
     *     possible object is
     *     {@link FlexPropType }
     *     
     */
    public FlexPropType getCopyrightHolder() {
        return copyrightHolder;
    }

    /**
     * Sets the value of the copyrightHolder property.
     * 
     * @param value
     *     allowed object is
     *     {@link FlexPropType }
     *     
     */
    public void setCopyrightHolder(FlexPropType value) {
        this.copyrightHolder = value;
    }

    /**
     * Gets the value of the copyrightNoticeOrUsageTerms property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the copyrightNoticeOrUsageTerms property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCopyrightNoticeOrUsageTerms().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link BlockType }{@code >}
     * {@link JAXBElement }{@code <}{@link BlockType }{@code >}
     * 
     * 
     */
    public List<JAXBElement<BlockType>> getCopyrightNoticeOrUsageTerms() {
        if (copyrightNoticeOrUsageTerms == null) {
            copyrightNoticeOrUsageTerms = new ArrayList<JAXBElement<BlockType>>();
        }
        return this.copyrightNoticeOrUsageTerms;
    }

    /**
     * Gets the value of the any property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the any property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAny().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Object }
     * {@link Element }
     * 
     * 
     */
    public List<Object> getAny() {
        if (any == null) {
            any = new ArrayList<Object>();
        }
        return this.any;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
